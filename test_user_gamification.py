#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è marguberk@gmail.com
"""

import requests
import json
import sqlite3

BASE_URL = "http://localhost:8002/api/v1"

def get_auth_token(email: str, password: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    response = requests.post(
        f"{BASE_URL}/auth/login",
        headers={"Content-Type": "application/x-www-form-urlencoded"},
        data={"username": email, "password": password}
    )
    if response.status_code == 200:
        return response.json()["access_token"]
    else:
        print(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
        return None

def complete_course(token: str, course_id: int):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫—É—Ä—Å–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.post(f"{BASE_URL}/gamification/complete-course/{course_id}", headers=headers)
    
    if response.status_code == 200:
        result = response.json()
        print(f"\nüéâ –ö—É—Ä—Å {course_id} –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìö –ù–∞–∑–≤–∞–Ω–∏–µ: {result['course_title']}")
        print(f"üí∞ –ü–æ–ª—É—á–µ–Ω–æ XP: {result['xp_result']['xp_gained']}")
        print(f"üìä –û–±—â–∏–π XP: {result['xp_result']['total_xp']}")
        print(f"‚¨ÜÔ∏è –£—Ä–æ–≤–µ–Ω—å: {result['xp_result']['old_level']} ‚Üí {result['xp_result']['new_level']}")
        if result['xp_result']['level_up']:
            print("üéä –ü–û–í–´–®–ï–ù–ò–ï –£–†–û–í–ù–Ø!")
        
        print(f"üéØ –ù–∞–≤—ã–∫: {result['skill_result']['skill_name']}")
        print(f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞–≤—ã–∫–∞: {result['skill_result']['old_score']}% ‚Üí {result['skill_result']['new_score']}%")
        print(f"üèÖ –£—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–∞: {result['skill_result']['old_level']} ‚Üí {result['skill_result']['new_level']}")
        
        if result['achievements']:
            print(f"üèÜ –ù–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è: {', '.join(result['achievements'])}")
        
        return result
    else:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫—É—Ä—Å–∞ {course_id}: {response.text}")
        return None

def get_progress(token: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{BASE_URL}/gamification/progress", headers=headers)
    
    if response.status_code == 200:
        progress = response.json()
        print(f"\nüìä –¢–ï–ö–£–©–ò–ô –ü–†–û–ì–†–ï–°–°:")
        print(f"üéñÔ∏è –£—Ä–æ–≤–µ–Ω—å: {progress['level']}")
        print(f"üí∞ XP: {progress['current_xp']}")
        print(f"‚è≠Ô∏è –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: {progress['xp_to_next_level']} XP")
        print(f"üìö –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∫—É—Ä—Å–æ–≤: {progress['courses_completed']}")
        print(f"üìù –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {progress['lessons_completed']}")
        print(f"‚≠ê –û—Ç–ª–∏—á–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫: {progress['perfect_scores']}")
        return progress
    else:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {response.text}")
        return None

def get_dashboard(token: str):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{BASE_URL}/gamification/dashboard", headers=headers)
    
    if response.status_code == 200:
        dashboard = response.json()
        print(f"\nüéÆ –î–ê–®–ë–û–†–î –ì–ï–ô–ú–ò–§–ò–ö–ê–¶–ò–ò:")
        print(f"üéñÔ∏è –£—Ä–æ–≤–µ–Ω—å: {dashboard['level']} ({dashboard['level_name']})")
        print(f"üí∞ XP: {dashboard['current_xp']}/{dashboard['next_level_xp']}")
        print(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {dashboard['progress_percentage']}%")
        print(f"üìö –ö—É—Ä—Å—ã: {dashboard['completed_courses']}/{dashboard['total_courses']}")
        return dashboard
    else:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞: {response.text}")
        return None

def reset_user_progress(email: str):
    """–°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    conn = sqlite3.connect('app.db')
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT id FROM users WHERE email = ?", (email,))
    user_result = cursor.fetchone()
    if not user_result:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    user_id = user_result[0]
    
    # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤
    cursor.execute("DELETE FROM course_completions WHERE user_id = ?", (user_id,))
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    cursor.execute("""
        UPDATE user_game_profiles 
        SET level = 1, experience_points = 0, courses_completed = 0, 
            lessons_completed = 0, perfect_scores = 0
        WHERE user_id = ?
    """, (user_id,))
    
    conn.commit()
    conn.close()
    print(f"‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {email} —Å–±—Ä–æ—à–µ–Ω")

def main():
    print("üéÆ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ì–ï–ô–ú–ò–§–ò–ö–ê–¶–ò–ò MaroAI")
    print("=" * 50)
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    email = "admin@maroai.com"
    password = "admin123"
    
    # –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    print("üîÑ –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...")
    reset_user_progress(email)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    print(f"\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {email}...")
    token = get_auth_token(email, password)
    if not token:
        return
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    
    # –ù–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    get_progress(token)
    get_dashboard(token)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤
    courses_to_test = [1, 2, 3]  # –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è, –õ–∏–¥–µ—Ä—Å—Ç–≤–æ, –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
    
    for course_id in courses_to_test:
        print(f"\n{'='*50}")
        print(f"üìö –ó–ê–í–ï–†–®–ï–ù–ò–ï –ö–£–†–°–ê {course_id}")
        print(f"{'='*50}")
        
        complete_course(token, course_id)
        get_progress(token)
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –¥–∞—à–±–æ—Ä–¥
    print(f"\n{'='*50}")
    print("üèÅ –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´")
    print(f"{'='*50}")
    get_dashboard(token)
    
    print(f"\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤")
    print("üîó –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –∏ –≤–æ–π–¥–∏—Ç–µ –ø–æ–¥ —Å–≤–æ–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º")

if __name__ == "__main__":
    main() 