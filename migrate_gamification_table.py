import sqlite3
from datetime import datetime

def migrate_gamification_table():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã user_game_profiles –¥–ª—è –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    
    print("üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('app.db')
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç–æ–ª–±–µ—Ü experience_points
        cursor.execute("PRAGMA table_info(user_game_profiles)")
        columns = [row[1] for row in cursor.fetchall()]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã
        if 'experience_points' not in columns:
            cursor.execute('ALTER TABLE user_game_profiles ADD COLUMN experience_points INTEGER DEFAULT 0')
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü experience_points")
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º experience –≤ experience_points –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if 'experience' in columns and 'experience_points' not in columns:
            # SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç RENAME COLUMN –¥–æ –≤–µ—Ä—Å–∏–∏ 3.25.0
            # –ü–æ—ç—Ç–æ–º—É –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –∏ –∫–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            cursor.execute('ALTER TABLE user_game_profiles ADD COLUMN experience_points INTEGER DEFAULT 0')
            cursor.execute('UPDATE user_game_profiles SET experience_points = experience WHERE experience IS NOT NULL')
            print("   ‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ experience –≤ experience_points")
        
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –≤—Å–µ –Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        required_columns = {
            'level': 'INTEGER DEFAULT 1',
            'experience_points': 'INTEGER DEFAULT 0',
            'total_points': 'INTEGER DEFAULT 0',
            'courses_completed': 'INTEGER DEFAULT 0',
            'lessons_completed': 'INTEGER DEFAULT 0',
            'perfect_scores': 'INTEGER DEFAULT 0',
            'login_streak': 'INTEGER DEFAULT 0',
            'longest_streak': 'INTEGER DEFAULT 0',
            'badges': 'JSON',
            'titles': 'JSON',
            'last_login': 'DATETIME',
            'last_action': 'DATETIME'
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–±—Ü—ã —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        cursor.execute("PRAGMA table_info(user_game_profiles)")
        current_columns = [row[1] for row in cursor.fetchall()]
        
        for column, column_type in required_columns.items():
            if column not in current_columns:
                cursor.execute(f'ALTER TABLE user_game_profiles ADD COLUMN {column} {column_type}')
                print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü {column}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        cursor.execute("SELECT COUNT(*) FROM achievements")
        achievement_count = cursor.fetchone()[0]
        
        if achievement_count == 0:
            print("\nüèÜ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...")
            
            achievements = [
                ("–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫—É—Ä—Å", "üéØ", 1, 0, 0),
                ("–°—Ç—É–¥–µ–Ω—Ç", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 3 –∫—É—Ä—Å–∞", "üìö", 3, 0, 0),
                ("–≠–∫—Å–ø–µ—Ä—Ç", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 5 –∫—É—Ä—Å–æ–≤", "üèÜ", 5, 0, 0),
                ("–û—Ç–ª–∏—á–Ω–∏–∫", "–ü–æ–ª—É—á–∏—Ç–µ 10 –æ—Ç–ª–∏—á–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫", "‚≠ê", 0, 0, 0),
                ("–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 20 —É—Ä–æ–∫–æ–≤", "üèÉ‚Äç‚ôÇÔ∏è", 0, 20, 0),
                ("–ü–µ—Ä–≤–æ–æ—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª—å", "–ù–∞—á–Ω–∏—Ç–µ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫", "üöÄ", 0, 1, 0),
                ("–ú–∞—Å—Ç–µ—Ä –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 2 –∫—É—Ä—Å–∞ –ø–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", "üí¨", 2, 0, 0),
                ("–õ–∏–¥–µ—Ä", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∫—É—Ä—Å –ª–∏–¥–µ—Ä—Å—Ç–≤–∞", "üëë", 1, 0, 0),
            ]
            
            for title, description, badge, req_courses, req_lessons, req_score in achievements:
                cursor.execute("""
                    INSERT INTO achievements (title, description, badge_image, required_courses, required_lessons, required_score)
                    VALUES (?, ?, ?, ?, ?, ?)
                """, (title, description, badge, req_courses, req_lessons, req_score))
            
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(achievements)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π")
        
        # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        cursor.execute("SELECT COUNT(*) FROM user_game_profiles WHERE user_id = 1")
        profile_count = cursor.fetchone()[0]
        
        if profile_count == 0:
            cursor.execute("""
                INSERT INTO user_game_profiles 
                (user_id, level, experience_points, courses_completed, lessons_completed, perfect_scores, login_streak, longest_streak, badges, titles)
                VALUES (1, 2, 10, 0, 0, 0, 0, 0, '[]', '[]')
            """)
            print("   ‚úÖ –°–æ–∑–¥–∞–Ω –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        
        conn.commit()
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("\nüìã –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
        cursor.execute("PRAGMA table_info(user_game_profiles)")
        for row in cursor.fetchall():
            print(f"   {row[1]}: {row[2]}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    migrate_gamification_table() 