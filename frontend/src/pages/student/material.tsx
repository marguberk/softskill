import { useState, useEffect } from "react"
import { useParams, Link } from "react-router-dom"
import { marked } from "marked"
import { Card, CardContent } from "../../components/ui/card"
import { Button } from "../../components/ui/button"
import { Badge } from "../../components/ui/badge"
import { toast } from "sonner"
import {
  ArrowLeft,
  BookOpen,
  Play,
  Clock,
  User,
  Calendar
} from "lucide-react"

interface LearningMaterial {
  id: number
  title: string
  description: string
  content_type: 'video' | 'article' | 'tutorial'
  skill_type: string
  difficulty_level: 'beginner' | 'intermediate' | 'advanced'
  duration_minutes: number
  author: string
  theory_content?: string
  video_url?: string
  video_id?: string
  source_url?: string
  is_published: boolean
  created_at: string
}

const LEVEL_MAP = {
  beginner: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
  intermediate: '–°—Ä–µ–¥–Ω–∏–π',
  advanced: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'
}

export default function MaterialPage() {
  const { id } = useParams<{ id: string }>()
  const [material, setMaterial] = useState<LearningMaterial | null>(null)
  const [loading, setLoading] = useState(true)
  const [completing, setCompleting] = useState(false)
  const [completed, setCompleted] = useState(false)

  useEffect(() => {
    if (id) {
      loadMaterial(parseInt(id))
    }
  }, [id])

  const loadMaterial = async (materialId: number) => {
    try {
      setLoading(true)
      const response = await fetch(`http://localhost:8000/api/v1/materials/${materialId}`)
      
      if (!response.ok) {
        throw new Error('–ú–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }

      const data = await response.json()
      setMaterial(data)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:', error)
    } finally {
      setLoading(false)
    }
  }

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'video':
        return <Play className="h-5 w-5" />
      case 'article':
        return <BookOpen className="h-5 w-5" />
      case 'tutorial':
        return <BookOpen className="h-5 w-5" />
      default:
        return <BookOpen className="h-5 w-5" />
    }
  }

  const getTypeLabel = (type: string) => {
    switch (type) {
      case 'video':
        return '–í–∏–¥–µ–æ'
      case 'article':
        return '–°—Ç–∞—Ç—å—è'
      case 'tutorial':
        return '–£—Ä–æ–∫'
      default:
        return '–ú–∞—Ç–µ—Ä–∏–∞–ª'
    }
  }

  const getLevelColor = (level: string) => {
    switch (level) {
      case 'beginner':
        return 'bg-green-100 text-green-800'
      case 'intermediate':
        return 'bg-yellow-100 text-yellow-800'
      case 'advanced':
        return 'bg-red-100 text-red-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ YouTube —Å—Å—ã–ª–∫–∏ –≤ embed —Ñ–æ—Ä–º–∞—Ç
  const getEmbedUrl = (url: string) => {
    if (!url) return ''
    
    // –ï—Å–ª–∏ —É–∂–µ embed —Å—Å—ã–ª–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    if (url.includes('youtube.com/embed/')) {
      return url
    }
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ã—á–Ω—É—é YouTube —Å—Å—ã–ª–∫—É –≤ embed
    const videoIdMatch = url.match(/(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/)([^&\n?#]+)/)
    if (videoIdMatch && videoIdMatch[1]) {
      return `https://www.youtube.com/embed/${videoIdMatch[1]}?rel=0&modestbranding=1`
    }
    
    // –ï—Å–ª–∏ –Ω–µ YouTube —Å—Å—ã–ª–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return url
  }

  const handleIframeError = () => {
    console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ')
  }

  const handleComplete = async () => {
    if (!material || completed) return
    
    setCompleting(true)
    try {
      const token = localStorage.getItem('token')
      if (!token) {
        toast.error('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É')
        return
      }

      const response = await fetch(`http://localhost:8000/api/v1/materials/${material.id}/complete`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      })

      if (!response.ok) {
        const error = await response.json()
        throw new Error(error.detail || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞')
      }

      const result = await response.json()
      setCompleted(true)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
      if (result.level_up) {
        toast.success(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–≤—ã—Å–∏–ª–∏—Å—å –¥–æ ${result.level} —É—Ä–æ–≤–Ω—è!`, {
          description: `–ü–æ–ª—É—á–µ–Ω–æ: +${result.points_earned} –±–∞–ª–ª–æ–≤, +${result.exp_earned} –æ–ø—ã—Ç–∞`,
          duration: 5000
        })
      } else {
        toast.success(`‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑—É—á–µ–Ω!`, {
          description: `–ü–æ–ª—É—á–µ–Ω–æ: +${result.points_earned} –±–∞–ª–ª–æ–≤, +${result.exp_earned} –æ–ø—ã—Ç–∞`,
          duration: 3000
        })
      }
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:', error)
      toast.error(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –∫–∞–∫ –∏–∑—É—á–µ–Ω–Ω—ã–π')
    } finally {
      setCompleting(false)
    }
  }

  if (loading) {
    return (
      <div className="space-y-6">
        <div className="flex items-center gap-3">
          <Link to="/learning">
            <Button variant="outline" size="sm">
              <ArrowLeft className="h-4 w-4 mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
          </Link>
        </div>
        
        <Card>
          <CardContent className="p-8">
            <div className="animate-pulse space-y-4">
              <div className="h-8 bg-gray-200 rounded w-3/4"></div>
              <div className="h-4 bg-gray-200 rounded w-1/2"></div>
              <div className="h-32 bg-gray-200 rounded"></div>
            </div>
          </CardContent>
        </Card>
      </div>
    )
  }

  if (!material) {
    return (
      <div className="space-y-6">
        <div className="flex items-center gap-3">
          <Link to="/learning">
            <Button variant="outline" size="sm">
              <ArrowLeft className="h-4 w-4 mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
          </Link>
        </div>
        
        <Card>
          <CardContent className="py-12 text-center">
            <BookOpen className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
            <h3 className="text-lg font-medium mb-2">–ú–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω</h3>
            <p className="text-muted-foreground">
              –í–æ–∑–º–æ–∂–Ω–æ, –º–∞—Ç–µ—Ä–∏–∞–ª –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–º—É
            </p>
          </CardContent>
        </Card>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="flex items-center gap-3">
        <Link to="/learning">
          <Button variant="outline" size="sm">
            <ArrowLeft className="h-4 w-4 mr-2" />
            –ù–∞–∑–∞–¥ –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º
          </Button>
        </Link>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ */}
      <Card>
        <CardContent className="p-8">
          <div className="space-y-6">
            {/* –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ */}
            <div className="flex items-center gap-3 flex-wrap">
              <div className="flex items-center gap-2">
                {getTypeIcon(material.content_type)}
                <Badge variant="outline">
                  {getTypeLabel(material.content_type)}
                </Badge>
              </div>
              <Badge className={`${getLevelColor(material.difficulty_level)} hover:${getLevelColor(material.difficulty_level)}`}>
                {LEVEL_MAP[material.difficulty_level]}
              </Badge>
              <div className="flex items-center gap-1 text-sm text-muted-foreground">
                <Clock className="h-4 w-4" />
                {material.duration_minutes} –º–∏–Ω
              </div>
            </div>

            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div>
              <h1 className="text-3xl font-bold mb-4">{material.title}</h1>
              <p className="text-lg text-muted-foreground leading-relaxed">
                {material.description}
              </p>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ */}
            <div className="flex items-center gap-4 text-sm text-muted-foreground border-t pt-4">
              <div className="flex items-center gap-1">
                <User className="h-4 w-4" />
                –ê–≤—Ç–æ—Ä: {material.author}
              </div>
              <div className="flex items-center gap-1">
                <Calendar className="h-4 w-4" />
                –°–æ–∑–¥–∞–Ω–æ: {new Date(material.created_at).toLocaleDateString('ru-RU')}
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–∞ */}
      <Card>
        <CardContent className="p-8">
          <div className="space-y-6">
            <h2 className="text-xl font-semibold">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞</h2>
            
            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
            {material.theory_content && (
              <div className="prose max-w-none">
                <div 
                  dangerouslySetInnerHTML={{ 
                    __html: marked(material.theory_content) 
                  }} 
                />
              </div>
            )}
            
            {/* –í–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç */}
            {material.content_type === 'video' && material.video_url && (
              <div className="space-y-4">
                <iframe
                  width="100%"
                  height="400"
                  src={getEmbedUrl(material.video_url)}
                  title={material.title}
                  frameBorder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowFullScreen
                  className="rounded-lg"
                  onError={handleIframeError}
                />
              </div>
            )}
            
            {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ */}
            {material.source_url && (
              <div className="pt-4 border-t">
                <a 
                  href={material.source_url}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:text-blue-800 underline"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏—Å—Ç–æ—á–Ω–∏–∫—É –º–∞—Ç–µ—Ä–∏–∞–ª–∞
                </a>
              </div>
            )}
            
            {/* –ó–∞–≥–ª—É—à–∫–∏ –µ—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
            {!material.theory_content && !material.video_url && !material.source_url && (
              <div className="bg-gray-100 rounded-lg p-8 text-center">
                {material.content_type === 'video' && (
                  <>
                    <Play className="h-16 w-16 text-muted-foreground mx-auto mb-4" />
                    <p className="text-muted-foreground">
                      –í–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                    </p>
                  </>
                )}
                {material.content_type === 'article' && (
                  <>
                    <BookOpen className="h-16 w-16 text-muted-foreground mx-auto mb-4" />
                    <p className="text-muted-foreground">
                      –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                    </p>
                  </>
                )}
                {material.content_type === 'tutorial' && (
                  <>
                    <BookOpen className="h-16 w-16 text-muted-foreground mx-auto mb-4" />
                    <p className="text-muted-foreground">
                      –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                    </p>
                  </>
                )}
              </div>
            )}
          </div>
        </CardContent>
      </Card>

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <Card>
        <CardContent className="p-6">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="font-semibold mb-1">–ó–∞–≤–µ—Ä—à–∏–ª–∏ –∏–∑—É—á–µ–Ω–∏–µ?</h3>
              <p className="text-sm text-muted-foreground">
                –û—Ç–º–µ—Ç—å—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –∫–∞–∫ –∏–∑—É—á–µ–Ω–Ω—ã–π –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–∞–ª–ª—ã
              </p>
            </div>
            <Button 
              onClick={handleComplete}
              disabled={completing || completed}
              className={completed ? "bg-green-600 hover:bg-green-600" : ""}
            >
              {completing ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                </>
              ) : completed ? (
                "‚úÖ –ò–∑—É—á–µ–Ω–æ"
              ) : (
                "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –∏–∑—É—á–µ–Ω–Ω–æ–µ"
              )}
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  )
} 