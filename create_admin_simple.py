#!/usr/bin/env python3

import sys
import os
from sqlalchemy import create_engine, Column, Integer, String, Boolean, DateTime
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from sqlalchemy.sql import func
from passlib.context import CryptContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
DATABASE_URL = "sqlite:///./app.db"

# –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
engine = create_engine(DATABASE_URL, connect_args={"check_same_thread": False})
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
Base = declarative_base()

# –ü—Ä–æ—Å—Ç–∞—è –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
class SimpleUser(Base):
    __tablename__ = "users"

    id = Column(Integer, primary_key=True, index=True)
    email = Column(String, unique=True, index=True, nullable=False)
    hashed_password = Column(String, nullable=False)
    full_name = Column(String)
    role = Column(String, nullable=False, default="student")
    is_active = Column(Boolean, default=True)
    created_at = Column(DateTime(timezone=True), server_default=func.now())
    updated_at = Column(DateTime(timezone=True), onupdate=func.now())

# –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def hash_password(password: str) -> str:
    return pwd_context.hash(password)

def create_admin():
    """–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...')
        Base.metadata.create_all(bind=engine)
        print('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã')
        
        db = SessionLocal()
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–≥–æ –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        existing_admin = db.query(SimpleUser).filter(SimpleUser.email == 'admin@maroai.com').first()
        if existing_admin:
            print('üóëÔ∏è –£–¥–∞–ª—è—é —Å—Ç–∞—Ä–æ–≥–æ –∞–¥–º–∏–Ω–∞...')
            db.delete(existing_admin)
            db.commit()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        admin_user = SimpleUser(
            email='admin@maroai.com',
            full_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            hashed_password=hash_password('admin123'),
            role='admin',
            is_active=True
        )
        
        db.add(admin_user)
        db.commit()
        
        print('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!')
        print('üìß Email: admin@maroai.com')
        print('üîë –ü–∞—Ä–æ–ª—å: admin123')
        print('üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:5173/admin')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞: {e}')
        import traceback
        traceback.print_exc()
    finally:
        if 'db' in locals():
            db.close()

if __name__ == '__main__':
    create_admin() 