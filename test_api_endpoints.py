#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API endpoints MaroAI
"""
import requests
import json

BASE_URL = "http://localhost:8002"

def test_endpoints():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints MaroAI")
    print("=" * 50)
    
    # 1. –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: OK")
        else:
            print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - {e}")
    
    # 2. –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
    try:
        response = requests.get(f"{BASE_URL}/api/v1/courses/")
        if response.status_code == 200:
            courses = response.json()
            print(f"‚úÖ –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤: OK ({len(courses)} –∫—É—Ä—Å–æ–≤)")
            for course in courses:
                print(f"   - {course['title']}")
        else:
            print(f"‚ùå –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤: {e}")
    
    # 3. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫—É—Ä—Å
    try:
        response = requests.get(f"{BASE_URL}/api/v1/courses/1")
        if response.status_code == 200:
            course = response.json()
            print(f"‚úÖ –ö—É—Ä—Å #1: OK - {course['title']}")
        else:
            print(f"‚ùå –ö—É—Ä—Å #1: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ö—É—Ä—Å #1: {e}")
    
    # 4. –£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞
    try:
        response = requests.get(f"{BASE_URL}/api/v1/courses/1/lessons")
        if response.status_code == 200:
            lessons_data = response.json()
            lessons = lessons_data['lessons']
            print(f"‚úÖ –£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞ #1: OK ({len(lessons)} —É—Ä–æ–∫–æ–≤)")
            for lesson in lessons:
                print(f"   - –£—Ä–æ–∫ {lesson['order_position']}: {lesson['material']['title']}")
        else:
            print(f"‚ùå –£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞ #1: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –£—Ä–æ–∫–∏ –∫—É—Ä—Å–∞ #1: {e}")
    
    # 5. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —É—Ä–æ–∫
    try:
        response = requests.get(f"{BASE_URL}/api/v1/courses/1/lessons/1")
        if response.status_code == 200:
            lesson = response.json()
            print(f"‚úÖ –£—Ä–æ–∫ #1: OK - {lesson['material']['title']}")
            print(f"   - –ó–∞–¥–∞–Ω–∏–π: {len(lesson['tasks'])}")
            print(f"   - –í–∏–¥–µ–æ: {lesson['material']['video_url'] is not None}")
        else:
            print(f"‚ùå –£—Ä–æ–∫ #1: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –£—Ä–æ–∫ #1: {e}")
    
    print("\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    test_endpoints() 