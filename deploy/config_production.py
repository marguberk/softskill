#!/usr/bin/env python3

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ–¥ PostgreSQL –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
"""

import os
import re

def update_database_config():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç database.py –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PostgreSQL"""
    
    database_file = "database.py"
    
    if not os.path.exists(database_file):
        print(f"‚ùå –§–∞–π–ª {database_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {database_file} –¥–ª—è PostgreSQL...")
    
    with open(database_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º SQLite –Ω–∞ PostgreSQL
    new_content = content.replace(
        'from sqlalchemy import create_engine, MetaData',
        'from sqlalchemy import create_engine, MetaData\nfrom sqlalchemy.pool import QueuePool'
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    new_content = re.sub(
        r'SQLALCHEMY_DATABASE_URL = .*',
        'SQLALCHEMY_DATABASE_URL = os.getenv("DATABASE_URL", "postgresql://maroai:password@localhost/maroai_db")',
        new_content
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç os –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if 'import os' not in new_content:
        new_content = 'import os\n' + new_content
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–≤–∏–∂–∫–∞
    new_content = re.sub(
        r'engine = create_engine\([^)]+\)',
        '''engine = create_engine(
    SQLALCHEMY_DATABASE_URL,
    poolclass=QueuePool,
    pool_size=20,
    max_overflow=0,
    pool_pre_ping=True,
    pool_recycle=300
)''',
        new_content
    )
    
    with open(database_file, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    print(f"‚úÖ {database_file} –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è PostgreSQL")

def update_requirements():
    """–î–æ–±–∞–≤–ª—è–µ—Ç PostgreSQL –¥—Ä–∞–π–≤–µ—Ä –≤ requirements.txt"""
    
    requirements_file = "requirements.txt"
    
    if not os.path.exists(requirements_file):
        print(f"‚ùå –§–∞–π–ª {requirements_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {requirements_file}...")
    
    with open(requirements_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –î–æ–±–∞–≤–ª—è–µ–º psycopg2-binary –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if 'psycopg2' not in content:
        content += '\npsycopg2-binary==2.9.9\n'
    
    with open(requirements_file, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ {requirements_file} –æ–±–Ω–æ–≤–ª–µ–Ω")

def create_init_db_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î"""
    
    script_content = '''#!/usr/bin/env python3

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
"""

import os
import sys
sys.path.append('.')

from database import Base, engine
from sqlalchemy import text

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        Base.metadata.create_all(bind=engine)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        with engine.connect() as conn:
            result = conn.execute(text("SELECT version()"))
            version = result.fetchone()[0]
            print(f"üìä PostgreSQL –≤–µ—Ä—Å–∏—è: {version}")
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        sys.exit(1)

if __name__ == "__main__":
    init_database()
'''
    
    with open("init_db.py", 'w', encoding='utf-8') as f:
        f.write(script_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç init_db.py")

def main():
    print("üöÄ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞...")
    
    update_database_config()
    update_requirements()
    create_init_db_script()
    
    print("\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
    print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DATABASE_URL –≤ .env —Ñ–∞–π–ª–µ")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    print("3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ë–î: python init_db.py")

if __name__ == "__main__":
    main() 