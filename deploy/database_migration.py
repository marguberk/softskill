#!/usr/bin/env python3

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MaroAI –Ω–∞ —Å–µ—Ä–≤–µ—Ä
–ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–º–ø–∞ –∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
"""

import subprocess
import sys
import os
from datetime import datetime

def create_database_dump():
    """–°–æ–∑–¥–∞–µ—Ç –¥–∞–º–ø –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    dump_file = f"maroai_dump_{timestamp}.sql"
    
    print("üóÑÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–º–ø–∞ PostgreSQL
    dump_command = [
        "pg_dump",
        "-h", "localhost",
        "-U", "postgres",  # –∏–ª–∏ –≤–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        "-d", "MaroAI",    # –∏–º—è –≤–∞—à–µ–π –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
        "-f", dump_file,
        "--no-owner",
        "--no-privileges",
        "--clean"
    ]
    
    try:
        subprocess.run(dump_command, check=True)
        print(f"‚úÖ –î–∞–º–ø —Å–æ–∑–¥–∞–Ω: {dump_file}")
        print(f"üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª {dump_file} –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
        return dump_file
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–º–ø–∞: {e}")
        return None

def restore_database_dump(dump_file):
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–∞–º–ø–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    print(f"üóÑÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ {dump_file}...")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î
    restore_command = [
        "psql",
        "-h", "localhost",
        "-U", "maroai",
        "-d", "maroai_db",
        "-f", dump_file
    ]
    
    try:
        subprocess.run(restore_command, check=True)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")

def initialize_fresh_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""
    print("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø—É—Å–∫ Alembic –º–∏–≥—Ä–∞—Ü–∏–π –∏–ª–∏ SQL —Å–∫—Ä–∏–ø—Ç–æ–≤
    
    init_commands = [
        "python3", "-c", """
import sys
sys.path.append('.')
from database import init_db
init_db()
"""
    ]
    
    try:
        subprocess.run(init_commands, check=True, cwd="/var/www/maroai")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")

def main():
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python database_migration.py dump          # –°–æ–∑–¥–∞—Ç—å –¥–∞–º–ø (–ª–æ–∫–∞–ª—å–Ω–æ)")
        print("  python database_migration.py restore <file> # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–º–ø (–Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)")
        print("  python database_migration.py init          # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –ë–î")
        sys.exit(1)
    
    action = sys.argv[1]
    
    if action == "dump":
        create_database_dump()
    elif action == "restore":
        if len(sys.argv) < 3:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –¥–∞–º–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
            sys.exit(1)
        dump_file = sys.argv[2]
        if not os.path.exists(dump_file):
            print(f"‚ùå –§–∞–π–ª {dump_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            sys.exit(1)
        restore_database_dump(dump_file)
    elif action == "init":
        initialize_fresh_database()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {action}")
        sys.exit(1)

if __name__ == "__main__":
    main() 