import sqlite3
import json
from datetime import datetime

def test_gamification_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    
    print("üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ MaroAI")
    print("=" * 50)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('app.db')
    cursor = conn.cursor()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1Ô∏è‚É£ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    
    user_id = 1  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    cursor.execute("""
        SELECT level, experience_points, courses_completed, lessons_completed, perfect_scores
        FROM user_game_profiles 
        WHERE user_id = ?
    """, (user_id,))
    
    game_profile = cursor.fetchone()
    
    if game_profile:
        level, xp, courses, lessons, perfect = game_profile
        print(f"   üìä –£—Ä–æ–≤–µ–Ω—å: {level}")
        print(f"   ‚≠ê –û–ø—ã—Ç: {xp} XP")
        print(f"   üìö –ö—É—Ä—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã: {courses}")
        print(f"   üìù –£—Ä–æ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã: {lessons}")
        print(f"   üèÜ –û—Ç–ª–∏—á–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏: {perfect}")
    else:
        print("   ‚ùå –ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤—ã–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n2Ô∏è‚É£ –¢–µ–∫—É—â–∏–µ –Ω–∞–≤—ã–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    
    cursor.execute("""
        SELECT s.name, usa.score, usa.level, usa.recommendations
        FROM user_skill_assessments usa
        JOIN skill_assessments sa ON usa.assessment_id = sa.id
        JOIN soft_skills s ON usa.skill_id = s.id
        WHERE sa.user_id = ? AND sa.is_completed = 1
        ORDER BY sa.completed_at DESC
        LIMIT 6
    """, (user_id,))
    
    skills = cursor.fetchall()
    
    for skill_name, score, level, recommendations in skills:
        level_text = {
            'BEGINNER': '–ù–∞—á–∞–ª—å–Ω—ã–π',
            'INTERMEDIATE': '–°—Ä–µ–¥–Ω–∏–π', 
            'ADVANCED': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
            'EXPERT': '–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π'
        }.get(level, level)
        
        print(f"   üéØ {skill_name}: {score}% ({level_text})")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã
    print("\n3Ô∏è‚É£ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã:")
    
    cursor.execute("""
        SELECT id, title, skill_type, difficulty_level
        FROM courses 
        WHERE is_published = 1
        ORDER BY id
    """, )
    
    courses = cursor.fetchall()
    
    for course_id, title, skill_type, difficulty in courses:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –∫—É—Ä—Å
        cursor.execute("""
            SELECT id FROM course_completions 
            WHERE user_id = ? AND course_id = ?
        """, (user_id, course_id))
        
        completed = cursor.fetchone() is not None
        status = "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω" if completed else "üìñ –î–æ—Å—Ç—É–ø–µ–Ω"
        
        print(f"   {status} –ö—É—Ä—Å {course_id}: {title} ({skill_type})")
    
    # 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\n4Ô∏è‚É£ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   curl -X POST 'http://localhost:8002/api/v1/gamification/complete-course/1' \\")
    print("        -H 'Authorization: Bearer YOUR_TOKEN'")
    print()
    print("   curl 'http://localhost:8002/api/v1/gamification/progress' \\")
    print("        -H 'Authorization: Bearer YOUR_TOKEN'")
    print()
    print("   curl 'http://localhost:8002/api/v1/gamification/dashboard' \\")
    print("        -H 'Authorization: Bearer YOUR_TOKEN'")
    
    # 5. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    cursor.execute("SELECT COUNT(*) FROM achievements")
    achievement_count = cursor.fetchone()[0]
    
    if achievement_count == 0:
        print("\n5Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...")
        
        achievements = [
            ("–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫—É—Ä—Å", "üéØ", 1, 0, 0),
            ("–°—Ç—É–¥–µ–Ω—Ç", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 3 –∫—É—Ä—Å–∞", "üìö", 3, 0, 0),
            ("–≠–∫—Å–ø–µ—Ä—Ç", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 5 –∫—É—Ä—Å–æ–≤", "üèÜ", 5, 0, 0),
            ("–û—Ç–ª–∏—á–Ω–∏–∫", "–ü–æ–ª—É—á–∏—Ç–µ 10 –æ—Ç–ª–∏—á–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫", "‚≠ê", 0, 0, 0),
            ("–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü", "–ó–∞–≤–µ—Ä—à–∏—Ç–µ 20 —É—Ä–æ–∫–æ–≤", "üèÉ‚Äç‚ôÇÔ∏è", 0, 20, 0),
        ]
        
        for title, description, badge, req_courses, req_lessons, req_score in achievements:
            cursor.execute("""
                INSERT INTO achievements (title, description, badge_image, required_courses, required_lessons, required_score)
                VALUES (?, ?, ?, ?, ?, ?)
            """, (title, description, badge, req_courses, req_lessons, req_score))
        
        conn.commit()
        print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã")
    
    # 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ XP
    print("\n6Ô∏è‚É£ –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π:")
    
    level_thresholds = [0, 150, 350, 600, 900, 1250, 1650, 2100, 2600, 3150]
    level_names = ["–ù–æ–≤–∏—á–æ–∫", "–ù–∞—á–∏–Ω–∞—é—â–∏–π", "–ü—Ä–∞–∫—Ç–∏–∫", "–û–ø—ã—Ç–Ω—ã–π", "–≠–∫—Å–ø–µ—Ä—Ç", 
                   "–ú–∞—Å—Ç–µ—Ä", "–ì—É—Ä—É", "–õ–µ–≥–µ–Ω–¥–∞", "–ß–µ–º–ø–∏–æ–Ω", "–í–µ–ª–∏–∫–∏–π –º–∞—Å—Ç–µ—Ä"]
    
    for i, (threshold, name) in enumerate(zip(level_thresholds, level_names), 1):
        print(f"   –£—Ä–æ–≤–µ–Ω—å {i}: {name} ({threshold} XP)")
    
    # 7. –ù–∞–≥—Ä–∞–¥—ã –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è
    print("\n7Ô∏è‚É£ –°–∏—Å—Ç–µ–º–∞ –Ω–∞–≥—Ä–∞–¥:")
    print("   üìù –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞: +10 XP")
    print("   üìö –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫—É—Ä—Å–∞: +50 XP")
    print("   ‚≠ê –û—Ç–ª–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ (90%+): +15 XP –±–æ–Ω—É—Å")
    print("   üéØ –ü–µ—Ä–≤—ã–π –∫—É—Ä—Å: +25 XP –±–æ–Ω—É—Å")
    print("   üî• –°—Ç—Ä–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: +5 XP –±–æ–Ω—É—Å")
    
    print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!")
    print("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã curl –≤—ã—à–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    conn.close()

if __name__ == "__main__":
    test_gamification_system() 